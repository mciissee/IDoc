using System.Text.RegularExpressions;

namespace Idoc.Lib
{
	public static class RegexUtils
	{
		public static Regex Condition = new Regex(@"^(?>(?>if|for|foreach|while|switch|using)[\s\n]*(?:(?>\((?>[^\(\)""'/]+|(?:(?:[\@\$]*""(?:(?:\\"")|(?:\\\\)|\s|[^""])*"")|(?:'(?:(?:\\'[^'])|\s|[^']{1,2})'))|(?:(?:/\*(?:[^*]|(?:\*+[^*/]))*\*+/)|(?:\s*//[^\n]*))+|/|\((?<P>)|(?<C-P>)\))*(?(P)(?!))\))+)[\s\n]*(?:(?>\{(?>[^\{\}""'/]+|(?:(?:[\@\$]*""(?:(?:\\"")|(?:\\\\)|\s|[^""])*"")|(?:'(?:(?:\\'[^'])|\s|[^']{1,2})'))|(?:(?:/\*(?:[^*]|(?:\*+[^*/]))*\*+/)|(?:\s*//[^\n]*))+|/|\{(?<P>)|(?<C-P>)\})*(?(P)(?!))\})+)?)", RegexOptions.Compiled);
		public static Regex Number = new Regex(@"^(?:(?:0[xb][0-9A-Fa-f]+)|[0-9])+([a-zA-Z]?)", RegexOptions.Compiled);
		public static Regex String = new Regex(@"^(?:(?:[\@\$]*""(?:(?:\\"")|(?:\\\\)|\s|[^""])*"")|(?:'(?:(?:\\'[^'])|\s|[^']{1,2})'))", RegexOptions.Compiled);
		public static Regex Com = new Regex(@"^(?:(?:/\*(?:[^*]|(?:\*+[^*/]))*\*+/)|(?:\s*//[^\n]*))+", RegexOptions.Compiled);
		public static Regex RC = new Regex(@"^\}", RegexOptions.Compiled);
		public static Regex LC = new Regex(@"^\{", RegexOptions.Compiled);
		public static Regex RB = new Regex(@"^\]", RegexOptions.Compiled);
		public static Regex LB = new Regex(@"^\[", RegexOptions.Compiled);
		public static Regex SemiColon = new Regex(@"^\;", RegexOptions.Compiled);
		public static Regex Colon = new Regex(@"^\:", RegexOptions.Compiled);
		public static Regex Comma = new Regex(@"^\,", RegexOptions.Compiled);
		public static Regex Dot = new Regex(@"^\.", RegexOptions.Compiled);
		public static Regex RP = new Regex(@"^\)", RegexOptions.Compiled);
		public static Regex LP = new Regex(@"^\(", RegexOptions.Compiled);
		public static Regex Mul = new Regex(@"^\*", RegexOptions.Compiled);
		public static Regex Mod = new Regex(@"^\%", RegexOptions.Compiled);
		public static Regex Div = new Regex(@"^/", RegexOptions.Compiled);
		public static Regex Arrow = new Regex(@"^\=\>", RegexOptions.Compiled);
		public static Regex Tilde = new Regex(@"^\~", RegexOptions.Compiled);
		public static Regex Xor = new Regex(@"^\^", RegexOptions.Compiled);
		public static Regex And = new Regex(@"^\&", RegexOptions.Compiled);
		public static Regex Negate = new Regex(@"^\!", RegexOptions.Compiled);
		public static Regex Pipe = new Regex(@"^\|", RegexOptions.Compiled);
		public static Regex QM = new Regex(@"^\?", RegexOptions.Compiled);
		public static Regex Minus = new Regex(@"^-", RegexOptions.Compiled);
		public static Regex Plus = new Regex(@"^\+", RegexOptions.Compiled);
		public static Regex Equal = new Regex(@"^\=", RegexOptions.Compiled);
		public static Regex LT = new Regex(@"^\<", RegexOptions.Compiled);
		public static Regex GT = new Regex(@"^\>", RegexOptions.Compiled);
		public static Regex Preprocessor = new Regex(@"^#[^\n]+", RegexOptions.Compiled);
		public static Regex Using = new Regex(@"^(using[^\n]*[\s\n]*)+", RegexOptions.Compiled);
		public static Regex N = new Regex(@"^(?:(?<attribute>(?:(?>\[(?>[^\[\]""'/]+|(?:(?:[\@\$]*""(?:(?:\\"")|(?:\\\\)|\s|[^""])*"")|(?:'(?:(?:\\'[^'])|\s|[^']{1,2})'))|(?:(?:/\*(?:[^*]|(?:\*+[^*/]))*\*+/)|(?:\s*//[^\n]*))+|/|\[(?<P>)|(?<C-P>)\])*(?(P)(?!))\])+))[\s\n]*)*namespace[\s\n]+(?<name>(?:[a-zA-Z_\@]\w*)(?:[\s\n]*\.(?:[a-zA-Z_\@]\w*)[\s\n]*)*)(?:[\s\n]*\.(?:[a-zA-Z_\@]\w*)[\s\n]*)*", RegexOptions.Compiled);
		public static Regex E = new Regex(@"^(?:(?<attribute>(?:(?>\[(?>[^\[\]""'/]+|(?:(?:[\@\$]*""(?:(?:\\"")|(?:\\\\)|\s|[^""])*"")|(?:'(?:(?:\\'[^'])|\s|[^']{1,2})'))|(?:(?:/\*(?:[^*]|(?:\*+[^*/]))*\*+/)|(?:\s*//[^\n]*))+|/|\[(?<P>)|(?<C-P>)\])*(?(P)(?!))\])+))[\s\n]*)*(?<access>(?>public|private|protected|internal|private[\s\n]+protected|protected[\s\n]+internal)[\s\n]+)?enum[\s\n]+(?<name>(?:[a-zA-Z_\@]\w*))(?=[\s\n]*\{)", RegexOptions.Compiled);
		public static Regex S = new Regex(@"^(?:(?<attribute>(?:(?>\[(?>[^\[\]""'/]+|(?:(?:[\@\$]*""(?:(?:\\"")|(?:\\\\)|\s|[^""])*"")|(?:'(?:(?:\\'[^'])|\s|[^']{1,2})'))|(?:(?:/\*(?:[^*]|(?:\*+[^*/]))*\*+/)|(?:\s*//[^\n]*))+|/|\[(?<P>)|(?<C-P>)\])*(?(P)(?!))\])+))[\s\n]*)*(?<access>(?>public|private|protected|internal|private[\s\n]+protected|protected[\s\n]+internal)[\s\n]+)?(?<modifier>(?>const|abstract|async|event|extern|override|static|unsafe|virtual|new|ref|partial|sealed|readonly)[\s\n]+)?struct[\s\n]+(?<name>(?:[a-zA-Z_\@]\w*)(?:(?><(?>[^<>]+|<(?<P>)|(?<C-P>)>)*(?(P)(?!))>)+)?)[\s\n]*(\:[\s\n]*(?:(?<base>(?:(?:[a-zA-Z_\@]\w*)(?:(?><(?>[^<>]+|<(?<P>)|(?<C-P>)>)*(?(P)(?!))>)+)?(?:(?:[\s\n]*\??\.(?:[a-zA-Z_\@]\w*)(?:(?><(?>[^<>]+|<(?<P>)|(?<C-P>)>)*(?(P)(?!))>)+)?\??)*|\?)))(?:\,?[\s\n]*))*)?(?<constraints>where.+)?(?=[\s\n]*\{)", RegexOptions.Compiled);
		public static Regex I = new Regex(@"^(?:(?<attribute>(?:(?>\[(?>[^\[\]""'/]+|(?:(?:[\@\$]*""(?:(?:\\"")|(?:\\\\)|\s|[^""])*"")|(?:'(?:(?:\\'[^'])|\s|[^']{1,2})'))|(?:(?:/\*(?:[^*]|(?:\*+[^*/]))*\*+/)|(?:\s*//[^\n]*))+|/|\[(?<P>)|(?<C-P>)\])*(?(P)(?!))\])+))[\s\n]*)*(?<access>(?>public|private|protected|internal|private[\s\n]+protected|protected[\s\n]+internal)[\s\n]+)?(?<modifier>(?>const|abstract|async|event|extern|override|static|unsafe|virtual|new|ref|partial|sealed|readonly)[\s\n]+)?interface[\s\n]+(?<name>(?:[a-zA-Z_\@]\w*)(?:(?><(?>[^<>]+|<(?<P>)|(?<C-P>)>)*(?(P)(?!))>)+)?)[\s\n]*(\:[\s\n]*(?:(?<base>(?:(?:[a-zA-Z_\@]\w*)(?:(?><(?>[^<>]+|<(?<P>)|(?<C-P>)>)*(?(P)(?!))>)+)?(?:(?:[\s\n]*\??\.(?:[a-zA-Z_\@]\w*)(?:(?><(?>[^<>]+|<(?<P>)|(?<C-P>)>)*(?(P)(?!))>)+)?\??)*|\?)))(?:\,?[\s\n]*))*)?(?<constraints>where.+)?(?=[\s\n]*\{)", RegexOptions.Compiled);
		public static Regex C = new Regex(@"^(?:(?<attribute>(?:(?>\[(?>[^\[\]""'/]+|(?:(?:[\@\$]*""(?:(?:\\"")|(?:\\\\)|\s|[^""])*"")|(?:'(?:(?:\\'[^'])|\s|[^']{1,2})'))|(?:(?:/\*(?:[^*]|(?:\*+[^*/]))*\*+/)|(?:\s*//[^\n]*))+|/|\[(?<P>)|(?<C-P>)\])*(?(P)(?!))\])+))[\s\n]*)*(?<access>(?>public|private|protected|internal|private[\s\n]+protected|protected[\s\n]+internal)[\s\n]+)?(?<modifier>(?>const|abstract|async|event|extern|override|static|unsafe|virtual|new|ref|partial|sealed|readonly)[\s\n]+)?class[\s\n]+(?<name>(?:[a-zA-Z_\@]\w*)(?:(?><(?>[^<>]+|<(?<P>)|(?<C-P>)>)*(?(P)(?!))>)+)?)[\s\n]*(\:[\s\n]*(?:(?<base>(?:(?:[a-zA-Z_\@]\w*)(?:(?><(?>[^<>]+|<(?<P>)|(?<C-P>)>)*(?(P)(?!))>)+)?(?:(?:[\s\n]*\??\.(?:[a-zA-Z_\@]\w*)(?:(?><(?>[^<>]+|<(?<P>)|(?<C-P>)>)*(?(P)(?!))>)+)?\??)*|\?)))(?:[\s\n]*\,?[\s\n]*))*)?(?<constraints>where.+)?(?=[\s\n]*\{)", RegexOptions.Compiled);
		public static Regex M = new Regex(@"^(?<![^\s])(?:(?<attribute>(?:(?>\[(?>[^\[\]""'/]+|(?:(?:[\@\$]*""(?:(?:\\"")|(?:\\\\)|\s|[^""])*"")|(?:'(?:(?:\\'[^'])|\s|[^']{1,2})'))|(?:(?:/\*(?:[^*]|(?:\*+[^*/]))*\*+/)|(?:\s*//[^\n]*))+|/|\[(?<P>)|(?<C-P>)\])*(?(P)(?!))\])+))[\s\n]*)*(?<methodaccess>(?>public|private|protected|internal|private[\s\n]+protected|protected[\s\n]+internal)[\s\n]+)?(?<methodmodifier>(?:(?>const|abstract|async|event|extern|override|static|unsafe|virtual|new|ref|partial|sealed|readonly)[\s\n]+)*)?(?<methodtype>(?:(?:(?:(?:[a-zA-Z_\@]\w*)(?:(?><(?>[^<>]+|<(?<P>)|(?<C-P>)>)*(?(P)(?!))>)+)?(?:(?:[\s\n]*\??\.(?:[a-zA-Z_\@]\w*)(?:(?><(?>[^<>]+|<(?<P>)|(?<C-P>)>)*(?(P)(?!))>)+)?\??)*|\?))|(?:(?>\((?>[^\(\)""'/]+|(?:(?:[\@\$]*""(?:(?:\\"")|(?:\\\\)|\s|[^""])*"")|(?:'(?:(?:\\'[^'])|\s|[^']{1,2})'))|(?:(?:/\*(?:[^*]|(?:\*+[^*/]))*\*+/)|(?:\s*//[^\n]*))+|/|\((?<P>)|(?<C-P>)\))*(?(P)(?!))\))+)\??)(?:[\s\n]*\[[\s\n]*\])?)[\s\n]+)?(?<!\w+)(?<!(?>new|return)\s+)(?<methodname>(?:(?:[a-zA-Z_\@]\w*)(?:(?><(?>[^<>]+|<(?<P>)|(?<C-P>)>)*(?(P)(?!))>)+)?(?:(?:[\s\n]*\??\.(?:[a-zA-Z_\@]\w*)(?:(?><(?>[^<>]+|<(?<P>)|(?<C-P>)>)*(?(P)(?!))>)+)?\??)*|\?))|operator[\s\n]*[\w\s<>,\[\].\+\-\*/=&|%\^~]+)[\s\n]*\([\s\n]*(?:(?<param>(?<attribute>(?:(?>\[(?>[^\[\]""'/]+|(?:(?:[\@\$]*""(?:(?:\\"")|(?:\\\\)|\s|[^""])*"")|(?:'(?:(?:\\'[^'])|\s|[^']{1,2})'))|(?:(?:/\*(?:[^*]|(?:\*+[^*/]))*\*+/)|(?:\s*//[^\n]*))+|/|\[(?<P>)|(?<C-P>)\])*(?(P)(?!))\])+))?[\s\n]*(?<parammodifier>(?:this\s+|ref\s+|out\s+|in\s+|params\s+))?(?<paramtype>(?:(?:(?:(?:[a-zA-Z_\@]\w*)(?:(?><(?>[^<>]+|<(?<P>)|(?<C-P>)>)*(?(P)(?!))>)+)?(?:(?:[\s\n]*\??\.(?:[a-zA-Z_\@]\w*)(?:(?><(?>[^<>]+|<(?<P>)|(?<C-P>)>)*(?(P)(?!))>)+)?\??)*|\?))|(?:(?>\((?>[^\(\)""'/]+|(?:(?:[\@\$]*""(?:(?:\\"")|(?:\\\\)|\s|[^""])*"")|(?:'(?:(?:\\'[^'])|\s|[^']{1,2})'))|(?:(?:/\*(?:[^*]|(?:\*+[^*/]))*\*+/)|(?:\s*//[^\n]*))+|/|\((?<P>)|(?<C-P>)\))*(?(P)(?!))\))+)\??)(?:[\s\n]*\[[\s\n]*\])?)[\s\n]+)(?<!\w+)(?<paramname>(?:[a-zA-Z_\@]\w*))(?:[\s\n]*\=[\s\n]*(?<paramvalue>(?:(?:0[xb][0-9A-Fa-f]+)|[0-9])+([a-zA-Z]?)|(?:(?:[\@\$]*""(?:(?:\\"")|(?:\\\\)|\s|[^""])*"")|(?:'(?:(?:\\'[^'])|\s|[^']{1,2})'))|(?:(?:[a-zA-Z_\@]\w*)(?:(?><(?>[^<>]+|<(?<P>)|(?<C-P>)>)*(?(P)(?!))>)+)?(?:(?:[\s\n]*\??\.(?:[a-zA-Z_\@]\w*)(?:(?><(?>[^<>]+|<(?<P>)|(?<C-P>)>)*(?(P)(?!))>)+)?\??)*|\?))(?:[\s\n]*(?:(?>\((?>[^\(\)""'/]+|(?:(?:[\@\$]*""(?:(?:\\"")|(?:\\\\)|\s|[^""])*"")|(?:'(?:(?:\\'[^'])|\s|[^']{1,2})'))|(?:(?:/\*(?:[^*]|(?:\*+[^*/]))*\*+/)|(?:\s*//[^\n]*))+|/|\((?<P>)|(?<C-P>)\))*(?(P)(?!))\))+))?))?)(?:\,?[\s\n]*))*[\s\n]*\)(?<methodconstraints>[\s\n]*(?:where.+|:[\s\n]*(?:base|this)[\s\n]*(?:(?>\((?>[^\(\)""'/]+|(?:(?:[\@\$]*""(?:(?:\\"")|(?:\\\\)|\s|[^""])*"")|(?:'(?:(?:\\'[^'])|\s|[^']{1,2})'))|(?:(?:/\*(?:[^*]|(?:\*+[^*/]))*\*+/)|(?:\s*//[^\n]*))+|/|\((?<P>)|(?<C-P>)\))*(?(P)(?!))\))+)))?[\s\n]*(?<body>;|(?:(?>\{(?>[^\{\}""'/]+|(?:(?:[\@\$]*""(?:(?:\\"")|(?:\\\\)|\s|[^""])*"")|(?:'(?:(?:\\'[^'])|\s|[^']{1,2})'))|(?:(?:/\*(?:[^*]|(?:\*+[^*/]))*\*+/)|(?:\s*//[^\n]*))+|/|\{(?<P>)|(?<C-P>)\})*(?(P)(?!))\})+)|=>(?:(?:(?:(?:[\@\$]*""(?:(?:\\"")|(?:\\\\)|\s|[^""])*"")|(?:'(?:(?:\\'[^'])|\s|[^']{1,2})'))|(?:(?:/\*(?:[^*]|(?:\*+[^*/]))*\*+/)|(?:\s*//[^\n]*))+|[^\;])*?\;))", RegexOptions.Compiled);
		public static Regex P = new Regex(@"^(?:(?<attribute>(?:(?>\[(?>[^\[\]""'/]+|(?:(?:[\@\$]*""(?:(?:\\"")|(?:\\\\)|\s|[^""])*"")|(?:'(?:(?:\\'[^'])|\s|[^']{1,2})'))|(?:(?:/\*(?:[^*]|(?:\*+[^*/]))*\*+/)|(?:\s*//[^\n]*))+|/|\[(?<P>)|(?<C-P>)\])*(?(P)(?!))\])+))[\s\n]*)*(?<propaccess>(?>public|private|protected|internal|private[\s\n]+protected|protected[\s\n]+internal)[\s\n]+)?(?<propmodifier>(?:(?>const|abstract|async|event|extern|override|static|unsafe|virtual|new|ref|partial|sealed|readonly)[\s\n]+)*)?(?<proptype>(?:(?:(?:(?:[a-zA-Z_\@]\w*)(?:(?><(?>[^<>]+|<(?<P>)|(?<C-P>)>)*(?(P)(?!))>)+)?(?:(?:[\s\n]*\??\.(?:[a-zA-Z_\@]\w*)(?:(?><(?>[^<>]+|<(?<P>)|(?<C-P>)>)*(?(P)(?!))>)+)?\??)*|\?))|(?:(?>\((?>[^\(\)""'/]+|(?:(?:[\@\$]*""(?:(?:\\"")|(?:\\\\)|\s|[^""])*"")|(?:'(?:(?:\\'[^'])|\s|[^']{1,2})'))|(?:(?:/\*(?:[^*]|(?:\*+[^*/]))*\*+/)|(?:\s*//[^\n]*))+|/|\((?<P>)|(?<C-P>)\))*(?(P)(?!))\))+)\??)(?:[\s\n]*\[[\s\n]*\])?)[\s\n]+)(?<!\w+)(?<!(?>namespace|class|enum|struct|interface)\s+)(?<propname>(?:(?:[a-zA-Z_\@]\w*)(?:(?><(?>[^<>]+|<(?<P>)|(?<C-P>)>)*(?(P)(?!))>)+)?(?:(?:[\s\n]*\??\.(?:[a-zA-Z_\@]\w*)(?:(?><(?>[^<>]+|<(?<P>)|(?<C-P>)>)*(?(P)(?!))>)+)?\??)*|\?))|this\s*\[.+\])[\s\n]*(?:\=\>(?:(?:(?:(?:[\@\$]*""(?:(?:\\"")|(?:\\\\)|\s|[^""])*"")|(?:'(?:(?:\\'[^'])|\s|[^']{1,2})'))|(?:(?:/\*(?:[^*]|(?:\*+[^*/]))*\*+/)|(?:\s*//[^\n]*))+|[^\;])*?\;)|(?<propbody>(?:(?>\{(?>[^\{\}""'/]+|(?:(?:[\@\$]*""(?:(?:\\"")|(?:\\\\)|\s|[^""])*"")|(?:'(?:(?:\\'[^'])|\s|[^']{1,2})'))|(?:(?:/\*(?:[^*]|(?:\*+[^*/]))*\*+/)|(?:\s*//[^\n]*))+|/|\{(?<P>)|(?<C-P>)\})*(?(P)(?!))\})+)))", RegexOptions.Compiled);
		public static Regex F = new Regex(@"^(?:(?<attribute>(?:(?>\[(?>[^\[\]""'/]+|(?:(?:[\@\$]*""(?:(?:\\"")|(?:\\\\)|\s|[^""])*"")|(?:'(?:(?:\\'[^'])|\s|[^']{1,2})'))|(?:(?:/\*(?:[^*]|(?:\*+[^*/]))*\*+/)|(?:\s*//[^\n]*))+|/|\[(?<P>)|(?<C-P>)\])*(?(P)(?!))\])+))[\s\n]*)*(?<fieldaccess>(?>public|private|protected|internal|private[\s\n]+protected|protected[\s\n]+internal)[\s\n]+)?(?<fieldmodifier>(?:(?>const|abstract|async|event|extern|override|static|unsafe|virtual|new|ref|partial|sealed|readonly)[\s\n]+)*)?(?<fieldtype>(?:(?:(?:(?:[a-zA-Z_\@]\w*)(?:(?><(?>[^<>]+|<(?<P>)|(?<C-P>)>)*(?(P)(?!))>)+)?(?:(?:[\s\n]*\??\.(?:[a-zA-Z_\@]\w*)(?:(?><(?>[^<>]+|<(?<P>)|(?<C-P>)>)*(?(P)(?!))>)+)?\??)*|\?))|(?:(?>\((?>[^\(\)""'/]+|(?:(?:[\@\$]*""(?:(?:\\"")|(?:\\\\)|\s|[^""])*"")|(?:'(?:(?:\\'[^'])|\s|[^']{1,2})'))|(?:(?:/\*(?:[^*]|(?:\*+[^*/]))*\*+/)|(?:\s*//[^\n]*))+|/|\((?<P>)|(?<C-P>)\))*(?(P)(?!))\))+)\??)(?:[\s\n]*\[[\s\n]*\])?)[\s\n]+)(?<!\w+)(?<!(?>var)\s+)(?<fieldname>(?:(?:[a-zA-Z_\@]\w*)(?:(?><(?>[^<>]+|<(?<P>)|(?<C-P>)>)*(?(P)(?!))>)+)?(?:(?:[\s\n]*\??\.(?:[a-zA-Z_\@]\w*)(?:(?><(?>[^<>]+|<(?<P>)|(?<C-P>)>)*(?(P)(?!))>)+)?\??)*|\?)))[\s\n]*(?:\;|\=(?<fieldvalue>(?:(?:(?:(?:[\@\$]*""(?:(?:\\"")|(?:\\\\)|\s|[^""])*"")|(?:'(?:(?:\\'[^'])|\s|[^']{1,2})'))|(?:(?:/\*(?:[^*]|(?:\*+[^*/]))*\*+/)|(?:\s*//[^\n]*))+|[^\;])*?\;)))", RegexOptions.Compiled);
		public static Regex Modifier = new Regex(@"^(?>const|abstract|async|event|extern|override|static|unsafe|virtual|new|ref|partial|sealed|readonly)", RegexOptions.Compiled);
		public static Regex Access = new Regex(@"^(?>public|private|protected|internal|private[\s\n]+protected|protected[\s\n]+internal)", RegexOptions.Compiled);
		public static Regex Word = new Regex(@"^(?:[a-zA-Z_\@]\w*)", RegexOptions.Compiled);
		public static Regex ParamGroup = new Regex(@"^\([\s\n]*(?:(?<param>(?<attribute>(?:(?>\[(?>[^\[\]""'/]+|(?:(?:[\@\$]*""(?:(?:\\"")|(?:\\\\)|\s|[^""])*"")|(?:'(?:(?:\\'[^'])|\s|[^']{1,2})'))|(?:(?:/\*(?:[^*]|(?:\*+[^*/]))*\*+/)|(?:\s*//[^\n]*))+|/|\[(?<P>)|(?<C-P>)\])*(?(P)(?!))\])+))?[\s\n]*(?<parammodifier>(?:this\s+|ref\s+|out\s+|in\s+|params\s+))?(?<paramtype>(?:(?:(?:(?:[a-zA-Z_\@]\w*)(?:(?><(?>[^<>]+|<(?<P>)|(?<C-P>)>)*(?(P)(?!))>)+)?(?:(?:[\s\n]*\??\.(?:[a-zA-Z_\@]\w*)(?:(?><(?>[^<>]+|<(?<P>)|(?<C-P>)>)*(?(P)(?!))>)+)?\??)*|\?))|(?:(?>\((?>[^\(\)""'/]+|(?:(?:[\@\$]*""(?:(?:\\"")|(?:\\\\)|\s|[^""])*"")|(?:'(?:(?:\\'[^'])|\s|[^']{1,2})'))|(?:(?:/\*(?:[^*]|(?:\*+[^*/]))*\*+/)|(?:\s*//[^\n]*))+|/|\((?<P>)|(?<C-P>)\))*(?(P)(?!))\))+)\??)(?:[\s\n]*\[[\s\n]*\])?)[\s\n]+)(?<!\w+)(?<paramname>(?:[a-zA-Z_\@]\w*))(?:[\s\n]*\=[\s\n]*(?<paramvalue>(?:(?:0[xb][0-9A-Fa-f]+)|[0-9])+([a-zA-Z]?)|(?:(?:[\@\$]*""(?:(?:\\"")|(?:\\\\)|\s|[^""])*"")|(?:'(?:(?:\\'[^'])|\s|[^']{1,2})'))|(?:(?:[a-zA-Z_\@]\w*)(?:(?><(?>[^<>]+|<(?<P>)|(?<C-P>)>)*(?(P)(?!))>)+)?(?:(?:[\s\n]*\??\.(?:[a-zA-Z_\@]\w*)(?:(?><(?>[^<>]+|<(?<P>)|(?<C-P>)>)*(?(P)(?!))>)+)?\??)*|\?))(?:[\s\n]*(?:(?>\((?>[^\(\)""'/]+|(?:(?:[\@\$]*""(?:(?:\\"")|(?:\\\\)|\s|[^""])*"")|(?:'(?:(?:\\'[^'])|\s|[^']{1,2})'))|(?:(?:/\*(?:[^*]|(?:\*+[^*/]))*\*+/)|(?:\s*//[^\n]*))+|/|\((?<P>)|(?<C-P>)\))*(?(P)(?!))\))+))?))?)(?:\,?[\s\n]*))*[\s\n]*\)", RegexOptions.Compiled);
		public static Regex Param = new Regex(@"^(?<attribute>(?:(?>\[(?>[^\[\]""'/]+|(?:(?:[\@\$]*""(?:(?:\\"")|(?:\\\\)|\s|[^""])*"")|(?:'(?:(?:\\'[^'])|\s|[^']{1,2})'))|(?:(?:/\*(?:[^*]|(?:\*+[^*/]))*\*+/)|(?:\s*//[^\n]*))+|/|\[(?<P>)|(?<C-P>)\])*(?(P)(?!))\])+))?[\s\n]*(?<parammodifier>(?:this\s+|ref\s+|out\s+|in\s+|params\s+))?(?<paramtype>(?:(?:(?:(?:[a-zA-Z_\@]\w*)(?:(?><(?>[^<>]+|<(?<P>)|(?<C-P>)>)*(?(P)(?!))>)+)?(?:(?:[\s\n]*\??\.(?:[a-zA-Z_\@]\w*)(?:(?><(?>[^<>]+|<(?<P>)|(?<C-P>)>)*(?(P)(?!))>)+)?\??)*|\?))|(?:(?>\((?>[^\(\)""'/]+|(?:(?:[\@\$]*""(?:(?:\\"")|(?:\\\\)|\s|[^""])*"")|(?:'(?:(?:\\'[^'])|\s|[^']{1,2})'))|(?:(?:/\*(?:[^*]|(?:\*+[^*/]))*\*+/)|(?:\s*//[^\n]*))+|/|\((?<P>)|(?<C-P>)\))*(?(P)(?!))\))+)\??)(?:[\s\n]*\[[\s\n]*\])?)[\s\n]+)(?<!\w+)(?<paramname>(?:[a-zA-Z_\@]\w*))(?:[\s\n]*\=[\s\n]*(?<paramvalue>(?:(?:0[xb][0-9A-Fa-f]+)|[0-9])+([a-zA-Z]?)|(?:(?:[\@\$]*""(?:(?:\\"")|(?:\\\\)|\s|[^""])*"")|(?:'(?:(?:\\'[^'])|\s|[^']{1,2})'))|(?:(?:[a-zA-Z_\@]\w*)(?:(?><(?>[^<>]+|<(?<P>)|(?<C-P>)>)*(?(P)(?!))>)+)?(?:(?:[\s\n]*\??\.(?:[a-zA-Z_\@]\w*)(?:(?><(?>[^<>]+|<(?<P>)|(?<C-P>)>)*(?(P)(?!))>)+)?\??)*|\?))(?:[\s\n]*(?:(?>\((?>[^\(\)""'/]+|(?:(?:[\@\$]*""(?:(?:\\"")|(?:\\\\)|\s|[^""])*"")|(?:'(?:(?:\\'[^'])|\s|[^']{1,2})'))|(?:(?:/\*(?:[^*]|(?:\*+[^*/]))*\*+/)|(?:\s*//[^\n]*))+|/|\((?<P>)|(?<C-P>)\))*(?(P)(?!))\))+))?))?", RegexOptions.Compiled);
		public static Regex Set = new Regex(@"^(?:set|private\s+set|protected\s+set|internal\s+set)", RegexOptions.Compiled);
		public static Regex Get = new Regex(@"^(?:get|private\s+get|protected\s+get|internal\s+get)", RegexOptions.Compiled);
		public static Regex Sharp = new Regex(@"^\#", RegexOptions.Compiled);
		public static Regex Dollar = new Regex(@"^\$", RegexOptions.Compiled);
		public static Regex At = new Regex(@"^\@", RegexOptions.Compiled);
		public static Regex Attribute = new Regex(@"^(?<attribute>(?:(?>\[(?>[^\[\]""'/]+|(?:(?:[\@\$]*""(?:(?:\\"")|(?:\\\\)|\s|[^""])*"")|(?:'(?:(?:\\'[^'])|\s|[^']{1,2})'))|(?:(?:/\*(?:[^*]|(?:\*+[^*/]))*\*+/)|(?:\s*//[^\n]*))+|/|\[(?<P>)|(?<C-P>)\])*(?(P)(?!))\])+))", RegexOptions.Compiled);
		public static Regex Identifier = new Regex(@"^(?:(?:[a-zA-Z_\@]\w*)(?:(?><(?>[^<>]+|<(?<P>)|(?<C-P>)>)*(?(P)(?!))>)+)?(?:(?:[\s\n]*\??\.(?:[a-zA-Z_\@]\w*)(?:(?><(?>[^<>]+|<(?<P>)|(?<C-P>)>)*(?(P)(?!))>)+)?\??)*|\?))", RegexOptions.Compiled);
		public static Regex Type = new Regex(@"^(?:(?:(?:(?:[a-zA-Z_\@]\w*)(?:(?><(?>[^<>]+|<(?<P>)|(?<C-P>)>)*(?(P)(?!))>)+)?(?:(?:[\s\n]*\??\.(?:[a-zA-Z_\@]\w*)(?:(?><(?>[^<>]+|<(?<P>)|(?<C-P>)>)*(?(P)(?!))>)+)?\??)*|\?))|(?:(?>\((?>[^\(\)""'/]+|(?:(?:[\@\$]*""(?:(?:\\"")|(?:\\\\)|\s|[^""])*"")|(?:'(?:(?:\\'[^'])|\s|[^']{1,2})'))|(?:(?:/\*(?:[^*]|(?:\*+[^*/]))*\*+/)|(?:\s*//[^\n]*))+|/|\((?<P>)|(?<C-P>)\))*(?(P)(?!))\))+)\??)(?:[\s\n]*\[[\s\n]*\])?)", RegexOptions.Compiled);
		public static Regex Name = new Regex(@"^(?:[a-zA-Z_\@]\w*)(?:(?><(?>[^<>]+|<(?<P>)|(?<C-P>)>)*(?(P)(?!))>)+)?", RegexOptions.Compiled);
		public static Regex Generic = new Regex(@"^(?:(?><(?>[^<>]+|<(?<P>)|(?<C-P>)>)*(?(P)(?!))>)+)", RegexOptions.Compiled);
		public static Regex Array = new Regex(@"^(?<array>\[[\s\n]*(?:(?:(?:0[xb][0-9A-Fa-f]+)|[0-9])+([a-zA-Z]?)|(?:(?:[a-zA-Z_\@]\w*)(?:(?><(?>[^<>]+|<(?<P>)|(?<C-P>)>)*(?(P)(?!))>)+)?(?:(?:[\s\n]*\??\.(?:[a-zA-Z_\@]\w*)(?:(?><(?>[^<>]+|<(?<P>)|(?<C-P>)>)*(?(P)(?!))>)+)?\??)*|\?))|(?:(?:[\@\$]*""(?:(?:\\"")|(?:\\\\)|\s|[^""])*"")|(?:'(?:(?:\\'[^'])|\s|[^']{1,2})')))?[\s\n]*\][\s\n]*)?", RegexOptions.Compiled);
		public static Regex SPP = new Regex(@"^[\s\n]+", RegexOptions.Compiled);
		public static Regex SP = new Regex(@"^[\s\n]*", RegexOptions.Compiled);

	}
}